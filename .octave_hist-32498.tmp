%let's use a constant zero separation of 5 so z2 = z1+5 to place two real zeros in different spots.
%for the complex conjugate zeros, let's make them have a damping ratio of 0.707 so the real and imaginary compoenents are the same.
figure()
hold on
for k=1:5
%guess at zero locations
z1 = k*15+k*15*j;
z2 = k*15-k*15*j;
% Cstar_PID = ((s+z1)*(s+z2))/s
Cstar_PID = 1/s*(s^2+(z1+z2)*s+z1*z2)
GH_PID = Cstar_PID*P*H;
rlocus(GH_PID)
end
_make_figures("/tmp/tmpc1mv39jq", "png", "Figure", -1, -1, 0, 0)
%now find the angle from our controller zero to our desired pole location using the angle criterion.
alphaz_PID = 0.5*(-180+ang_p1+ang_p2+ang_p3)
%now use this angle to find the horizontal (real) distance from our pole to the new zero
L_PID = imag(sd)/tand(alphaz_PID);
z_PID = abs(real(sd)-L_PID)
%now confirm that our root locus hits our desired point and does not go unstable
rlocus((s+z_PID)^2/s*P*H,.001,0,10)
hold on
plot(real(sd),imag(sd),'r.','MarkerSize',20)
axis([-50 50 -50 50])
_make_figures("/tmp/tmppzpxuy2l", "png", "Figure", -1, -1, 0, 0)
mag_GH_PID = abs(250*((sd+z_PID)^2)/(sd*(sd+10)*(sd+25)))
K_PID = 1/mag_GH_PID;
Ksum_PID = 1.0;
Kd_PID = K_PID/Ksum_PID
Kp_PID = 2*z_PID*Kd_PID
Ki_PID = z_PID^2*Kd_PID
_make_figures("/tmp/tmpn09qeb8b", "png", "Figure", -1, -1, 0, 0)
C_PID = Ksum_PID*(Kp_PID+Kd_PID*s+Ki_PID/s);
Gcl_PID = minreal(C_PID*P/(1+C_PID*P*H))
%pull out numerator and denominator coeffs
[num_cl_pid,den_cl_pid] = tfdata(Gcl_PID,'v');
%find eigs
eigs_closedloop_pid = roots(den_cl_pid)
%now simulate our system's response (y) to a unit step request (r). Also simulate for PI to compare
step(Gcl_PID,Gcl_PI)
legend('PID Control','PI Control')
_make_figures("/tmp/tmp8vx23l95", "png", "Figure", -1, -1, 0, 0)
s = tf('s');
sd = -4.5 + 4*1i;
z1 = 5;
z2 = z1;
GH = (250*(s+z1)*(s+z2))/(s*(s+10)*(s+25));
rlocus(GH)
hold on;
plot(real(sd),imag(sd),'.','MarkerSize',10);
hold off;
axis equal;
_make_figures("/tmp/tmppz6f77eb", "png", "Figure", -1, -1, 0, 0)
z1 = 24;
z2 = z1;
GH = (250*(s+z1)*(s+z2))/(s*(s+10)*(s+25));
rlocus(GH)
hold on;
plot(real(sd),imag(sd),'.','MarkerSize',10);
hold off;
axis equal;
_make_figures("/tmp/tmpe4dkwo58", "png", "Figure", -1, -1, 0, 0)
z1 = 50;
z2 = z1;
GH = (250*(s+z1)*(s+z2))/(s*(s+10)*(s+25));
rlocus(GH)
hold on;
th = linspace( pi/2, 3*pi/2, 100);
R = 20;  
x = R*cos(th) + 0;
y = R*sin(th) + 0;
plot(x,y)
plot(real(sd),imag(sd),'.','MarkerSize',10);
hold off;
axis equal;
_make_figures("/tmp/tmpo2ct5a8x", "png", "Figure", -1, -1, 0, 0)
P = 10/(s+10);
H = 25/(s+25);
zeta = 0.707;
wn = 20;
z1 = zeta*wn + wn*sqrt(1-zeta^2)*j;
z2 = zeta*wn - wn*sqrt(1-zeta^2)*j;
Cstar_PID = 1/s*(s^2+(z1+z2)*s+z1*z2);
GH_PID = Cstar_PID*P*H;
rlocus(GH_PID,.001,0,10)
hold on;
% plotting boundary (wn = 20 rad/s)
th = linspace( pi/2, 3*pi/2, 100);
R = 20;  
x = R*cos(th) + 0;
y = R*sin(th) + 0;
plot(x,y)
plot(real(sd),imag(sd),'m.','MarkerSize',10);
hold off;
xlim([-50 10])
ylim([-30 30])
_make_figures("/tmp/tmplodnpurx", "png", "Figure", -1, -1, 0, 0)
P = 10/(s+10);
H = 25/(s+25);
zeta = 0.42;
wn = 20;
z1 = zeta*wn + wn*sqrt(1-zeta^2)*j;
z2 = zeta*wn - wn*sqrt(1-zeta^2)*j;
Cstar_PID = 1/s*(s^2+(z1+z2)*s+z1*z2);
GH_PID = Cstar_PID*P*H;
rlocus(GH_PID,.001,0,10)
hold on;
% plotting boundary (wn = 20 rad/s)
plot(real(sd),imag(sd),'m.','MarkerSize',10);
hold off;
xlim([-50 10])
ylim([-30 30])
_make_figures("/tmp/tmp8q_hoz27", "png", "Figure", -1, -1, 0, 0)
mag_GH_PID = abs((250*(sd+z1)*(sd+z2))/(sd*(sd+10)*(sd+25)));
K_PID = 1/mag_GH_PID;
Ksum_PID = 1.0;
Kd_PID = K_PID/Ksum_PID
Kp_PID = (z1+z2)*Kd_PID
Ki_PID = z1*z2*Kd_PID
_make_figures("/tmp/tmp0egduluf", "png", "Figure", -1, -1, 0, 0)
# Octave 4.2.2, Tue Oct 27 01:14:38 2020 UTC <herzs@ip-10-1-3-183>
PS1('PEXPECT_PROMPT>'); PS2('PEXPECT_PROMPT_')
graphics_toolkit
more off; source ~/.octaverc; cd("/home/herzs/Lab_4");PS1('PEXPECT_PROMPT>'); PS2('PEXPECT_PROMPT_')
addpath("/usr/local/lib/python3.6/dist-packages/octave_kernel")
graphics_toolkit('gnuplot')
set(0, 'defaultfigurevisible', 'off');
version
# Octave 4.2.2, Fri Oct 30 13:36:32 2020 UTC <herzs@ip-10-1-3-169>
PS1('PEXPECT_PROMPT>'); PS2('PEXPECT_PROMPT_')
graphics_toolkit
more off; source ~/.octaverc; cd("/home/herzs/Week07_Monday");PS1('PEXPECT_PROMPT>'); PS2('PEXPECT_PROMPT_')
addpath("/usr/local/lib/python3.6/dist-packages/octave_kernel")
graphics_toolkit('gnuplot')
set(0, 'defaultfigurevisible', 'off');
version
# Octave 4.2.2, Sun Nov 01 11:05:17 2020 UTC <herzs@ip-10-1-3-140>
PS1('PEXPECT_PROMPT>'); PS2('PEXPECT_PROMPT_')
graphics_toolkit
more off; source ~/.octaverc; cd("/home/herzs/Lab_5");PS1('PEXPECT_PROMPT>'); PS2('PEXPECT_PROMPT_')
addpath("/usr/local/lib/python3.6/dist-packages/octave_kernel")
graphics_toolkit('gnuplot')
set(0, 'defaultfigurevisible', 'off');
version
# Octave 4.2.2, Tue Nov 03 15:05:18 2020 UTC <herzs@ip-10-1-3-140>
PS1('PEXPECT_PROMPT>'); PS2('PEXPECT_PROMPT_')
graphics_toolkit
more off; source ~/.octaverc; cd("/home/herzs/Lab_7");PS1('PEXPECT_PROMPT>'); PS2('PEXPECT_PROMPT_')
addpath("/usr/local/lib/python3.6/dist-packages/octave_kernel")
graphics_toolkit('gnuplot')
set(0, 'defaultfigurevisible', 'off');
version
# Octave 4.2.2, Fri Nov 06 13:21:53 2020 UTC <herzs@ip-10-1-3-140>
PS1('PEXPECT_PROMPT>'); PS2('PEXPECT_PROMPT_')
graphics_toolkit
more off; source ~/.octaverc; cd("/home/herzs/Week12_Friday");PS1('PEXPECT_PROMPT>'); PS2('PEXPECT_PROMPT_')
addpath("/usr/local/lib/python3.6/dist-packages/octave_kernel")
graphics_toolkit('gnuplot')
set(0, 'defaultfigurevisible', 'off');
version
s = tf('s');
%set up the system we wish to simulate
P = 1/(s+1);
%set up the input signal we will give to the system
w = .5*pi;
t = linspace(0,10,1000);
U = 1;%unity sinusoidal input
u = U*sin(w*t);%sinusoidal input
%now simulate the system response to this input
[y,t] = lsim(P,u,t);
%now plot the input and output together to compare
plot(t,u,t,y)
legend('input','output')
xlabel('Time (s)')
ylabel('input and response')
_make_figures("/tmp/tmp9x70uryl", "png", "Figure", -1, -1, 0, 0)
% YOUR CODE HERE
error('No Answer Given!')
_make_figures("/tmp/tmp6b_73p9l", "png", "Figure", -1, -1, 0, 0)
% YOUR CODE HERE
error('No Answer Given!')
_make_figures("/tmp/tmp97q93732", "png", "Figure", -1, -1, 0, 0)
% YOUR CODE HERE
error('No Answer Given!')
_make_figures("/tmp/tmpub8nen1l", "png", "Figure", -1, -1, 0, 0)
% YOUR CODE HERE
error('No Answer Given!')
_make_figures("/tmp/tmpuwjqbdno", "png", "Figure", -1, -1, 0, 0)
minimum_freq = 0.1;
maximum_freq = 500;
omega = logspace(log10(minimum_freq),log10(maximum_freq),length);
_make_figures("/tmp/tmp41kv30sh", "png", "Figure", -1, -1, 0, 0)
minimum_freq = 0.1;
maximum_freq = 500;
omega = logspace(log10(minimum_freq),log10(maximum_freq),100);
_make_figures("/tmp/tmpy34ibe8u", "png", "Figure", -1, -1, 0, 0)
minimum_freq = 0.1;
maximum_freq = 500;
w = logspace(log10(minimum_freq),log10(maximum_freq),100);
magRatio1 = sqrt(1^2 + 0^2)/sqrt(w.^2 + 1^2);
phaseLag1 = atan2(0,1) - atan2(w,1);
figure()
hold on;
plot(w,magRatio1)
plot(w,phaseLag1)
hold off;
_make_figures("/tmp/tmphiffef32", "png", "Figure", -1, -1, 0, 0)
minimum_freq = 0.1;
maximum_freq = 500;
w = logspace(log10(minimum_freq),log10(maximum_freq),100);
magRatio1 = sqrt(1^2 + 0^2)/sqrt(w.^2 + 1^2);
phaseLag1 = atan2(0,1) - atan2(w,1);
figure()
hold on;
loglog(w,magRatio1,'.')
loglog(w,phaseLag1,'.')
hold off;
_make_figures("/tmp/tmp59nf1v0j", "png", "Figure", -1, -1, 0, 0)
minimum_freq = 0.1;
maximum_freq = 500;
w = logspace(log10(minimum_freq),log10(maximum_freq),100);
magRatio1 = sqrt(1^2 + 0^2)/sqrt(w.^2 + 1^2)
phaseLag1 = atan2(0,1) - atan2(w,1);
figure()
hold on;
loglog(w,magRatio1,'.')
loglog(w,phaseLag1,'.')
hold off;
_make_figures("/tmp/tmpfyfqzwu2", "png", "Figure", -1, -1, 0, 0)
minimum_freq = 0.1;
maximum_freq = 500;
w = logspace(log10(minimum_freq),log10(maximum_freq),100);
magRatio1 = sqrt(1^2 + 0^2)./sqrt(w.^2 + 1^2)
phaseLag1 = atan2(0,1) - atan2(w,1);
figure()
hold on;
loglog(w,magRatio1,'.')
loglog(w,phaseLag1,'.')
hold off;
_make_figures("/tmp/tmp8omw24co", "png", "Figure", -1, -1, 0, 0)
minimum_freq = 0.1;
maximum_freq = 500;
w = logspace(log10(minimum_freq),log10(maximum_freq),100);
magRatio1 = sqrt(1^2 + 0^2)./sqrt(w.^2 + 1^2);
phaseLag1 = atan2(0,1) - atan2(w,1);
figure()
hold on;
loglog(w,magRatio1,'.')
loglog(w,phaseLag1,'.')
hold off;
_make_figures("/tmp/tmpiz5tw4n3", "png", "Figure", -1, -1, 0, 0)
minimum_freq = 0.1;
maximum_freq = 500;
w = logspace(log10(minimum_freq),log10(maximum_freq),100);
magRatio1 = sqrt(1^2 + 0^2)./sqrt(w.^2 + 1^2);
phaseLag1 = atan2(0,1) - atan2(w,1)
figure()
hold on;
loglog(w,magRatio1,'.')
loglog(w,phaseLag1,'.')
hold off;
_make_figures("/tmp/tmppc2ect50", "png", "Figure", -1, -1, 0, 0)
minimum_freq = 0.1;
maximum_freq = 500;
w = logspace(log10(minimum_freq),log10(maximum_freq),100);
magRatio1 = sqrt(1^2 + 0^2)./sqrt(w.^2 + 1^2);
phaseLag1 = atan(0,1) - atan(w,1)
figure()
hold on;
loglog(w,magRatio1,'.')
loglog(w,phaseLag1,'.')
hold off;
_make_figures("/tmp/tmpoyawnc42", "png", "Figure", -1, -1, 0, 0)
minimum_freq = 0.1;
maximum_freq = 500;
w = logspace(log10(minimum_freq),log10(maximum_freq),100);
magRatio1 = sqrt(1^2 + 0^2)./sqrt(w.^2 + 1^2);
phaseLag1 = atan(0/1) - atan(w/1)
figure()
hold on;
loglog(w,magRatio1,'.')
loglog(w,phaseLag1,'.')
hold off;
_make_figures("/tmp/tmp4v242628", "png", "Figure", -1, -1, 0, 0)
minimum_freq = 0.1;
maximum_freq = 500;
w = logspace(log10(minimum_freq),log10(maximum_freq),100);
magRatio1 = sqrt(1^2 + 0^2)./sqrt(w.^2 + 1^2);
phaseLag1 = atan2(0,1) - atan2(w,1);
figure()
loglog(w,magRatio1,'.')
figure()
loglog(w,phaseLag1,'.')
_make_figures("/tmp/tmpzc4svd2u", "png", "Figure", -1, -1, 0, 0)
minimum_freq = 0.1;
maximum_freq = 500;
w = logspace(log10(minimum_freq),log10(maximum_freq),100);
magRatio1 = sqrt(1^2 + 0^2)./sqrt(w.^2 + 1^2);
phaseLag1 = atan2(0,1) - atan2(w,1);
figure()
loglog(w,magRatio1,'r.')
figure()
loglog(w,phaseLag1,'b.')
_make_figures("/tmp/tmpopem43_e", "png", "Figure", -1, -1, 0, 0)
minimum_freq = 0.1;
maximum_freq = 500;
w = logspace(log10(minimum_freq),log10(maximum_freq),100);
magRatio1 = sqrt(1^2 + 0^2)./sqrt(w.^2 + 1^2);
phaseLag1 = atan2(0,1) - atan2(w,1);
figure()
loglog(w,magRatio1,'r.')
xlabel('Frequency (rad/s)')
ylabel('Magnitude Ratio')
title('Magnitude Ratio as a Function of Frequency for P = 1/(s+1)')
figure()
loglog(w,phaseLag1,'b.')
_make_figures("/tmp/tmp89reh9km", "png", "Figure", -1, -1, 0, 0)
s = tf('s');
P1 = 1/(s+1);
minimum_freq = 0.1;
maximum_freq = 500;
w = logspace(log10(minimum_freq),log10(maximum_freq),100);
magRatio1 = sqrt(1^2 + 0^2)./sqrt(w.^2 + 1^2);
phaseLag1 = atan2(0,1) - atan2(w,1);
figure()
loglog(w,magRatio1,'r.')
xlabel('Frequency (rad/s)')
ylabel('Magnitude Ratio')
title(strcat('Magnitude Ratio as a Function of Frequency for P = ',P1))
figure()
loglog(w,phaseLag1,'b.')
_make_figures("/tmp/tmpdmpjcchw", "png", "Figure", -1, -1, 0, 0)
s = tf('s');
P1 = 1/(s+1)
minimum_freq = 0.1;
maximum_freq = 500;
w = logspace(log10(minimum_freq),log10(maximum_freq),100);
magRatio1 = sqrt(1^2 + 0^2)./sqrt(w.^2 + 1^2);
phaseLag1 = atan2(0,1) - atan2(w,1);
figure()
loglog(w,magRatio1,'r.')
xlabel('Frequency (rad/s)')
ylabel('Magnitude Ratio')
title(strcat('Magnitude Ratio as a Function of Frequency for P = ',P1))
figure()
loglog(w,phaseLag1,'b.')
_make_figures("/tmp/tmpoc9pytvg", "png", "Figure", -1, -1, 0, 0)
s = tf('s');
P1 = 1/(s+1);
P1_title = latex(tfsym)
minimum_freq = 0.1;
maximum_freq = 500;
w = logspace(log10(minimum_freq),log10(maximum_freq),100);
magRatio1 = sqrt(1^2 + 0^2)./sqrt(w.^2 + 1^2);
phaseLag1 = atan2(0,1) - atan2(w,1);
figure()
loglog(w,magRatio1,'r.')
xlabel('Frequency (rad/s)')
ylabel('Magnitude Ratio')
title(sprintf('Bode plot of: $$ %s $$', P1_title), 'Interpreter','latex')
figure()
loglog(w,phaseLag1,'b.')
_make_figures("/tmp/tmprzxrynx1", "png", "Figure", -1, -1, 0, 0)
s = tf('s');
P1 = 1/(s+1);
P1_title = latex(P1)
minimum_freq = 0.1;
maximum_freq = 500;
w = logspace(log10(minimum_freq),log10(maximum_freq),100);
magRatio1 = sqrt(1^2 + 0^2)./sqrt(w.^2 + 1^2);
phaseLag1 = atan2(0,1) - atan2(w,1);
figure()
loglog(w,magRatio1,'r.')
xlabel('Frequency (rad/s)')
ylabel('Magnitude Ratio')
title(sprintf('Bode plot of: $$ %s $$', P1_title), 'Interpreter','latex')
figure()
loglog(w,phaseLag1,'b.')
_make_figures("/tmp/tmpzwe86qrp", "png", "Figure", -1, -1, 0, 0)
s = tf('s');
P1 = 1/(s+1);
P1_title = latex(P1)
minimum_freq = 0.1;
maximum_freq = 500;
w = logspace(log10(minimum_freq),log10(maximum_freq),100);
magRatio1 = sqrt(1^2 + 0^2)./sqrt(w.^2 + 1^2);
phaseLag1 = atan2(0,1) - atan2(w,1);
figure()
loglog(w,magRatio1,'r.')
xlabel('Frequency (rad/s)')
ylabel('Magnitude Ratio')
title(sprintf('Bode plot of: $$ %s $$', P1_title))
figure()
loglog(w,phaseLag1,'b.')
_make_figures("/tmp/tmpj17ojjvy", "png", "Figure", -1, -1, 0, 0)
s = tf('s');
P1 = 1/(s+1);
minimum_freq = 0.1;
maximum_freq = 500;
w = logspace(log10(minimum_freq),log10(maximum_freq),100);
magRatio1 = sqrt(1^2 + 0^2)./sqrt(w.^2 + 1^2);
phaseLag1 = atan2(0,1) - atan2(w,1);
figure()
loglog(w,magRatio1,'r.')
xlabel('Frequency (rad/s)')
ylabel('Magnitude Ratio')
title('Response Magnitude Ratio as a Function of Frequency')
figure()
loglog(w,phaseLag1,'b.')
xlabel('Frequency (rad/s)')
ylabel('Phase Lag (radians)')
title('Response Phase Lag as a Function of Frequency')
_make_figures("/tmp/tmpkx_6qw8_", "png", "Figure", -1, -1, 0, 0)
magRatio2 = sqrt(10^2 + 0^2)./sqrt(w.^2 + 1^2);
phaseLag2 = atan2(0,10) - atan2(w,1);
figure()
loglog(w,magRatio2,'r.')
xlabel('Frequency (rad/s)')
ylabel('Magnitude Ratio')
title('Response Magnitude Ratio as a Function of Frequency')
figure()
loglog(w,phaseLag2,'b.')
xlabel('Frequency (rad/s)')
ylabel('Phase Lag (radians)')
title('Response Phase Lag as a Function of Frequency')
_make_figures("/tmp/tmpv34q81nf", "png", "Figure", -1, -1, 0, 0)
magRatio3 = sqrt(1^2 + 0^2)./sqrt(w.^2 + 100^2);
phaseLag3 = atan2(0,1) - atan2(w,100);
figure()
loglog(w,magRatio3,'r.')
xlabel('Frequency (rad/s)')
ylabel('Magnitude Ratio')
title('Response Magnitude Ratio as a Function of Frequency')
figure()
loglog(w,phaseLag3,'b.')
xlabel('Frequency (rad/s)')
ylabel('Phase Lag (radians)')
title('Response Phase Lag as a Function of Frequency')
_make_figures("/tmp/tmpq6zoufeg", "png", "Figure", -1, -1, 0, 0)
s = tf('s');
P1 = 1/(s+1);
minimum_freq = 0.1;
maximum_freq = 500;
w = logspace(log10(minimum_freq),log10(maximum_freq),100);
magRatio1 = abs(1./(w+1))
phaseLag1 = atan2(0,1) - atan2(w,1);
figure()
loglog(w,magRatio1,'r.')
xlabel('Frequency (rad/s)')
ylabel('Magnitude Ratio')
title('Response Magnitude Ratio as a Function of Frequency')
figure()
loglog(w,phaseLag1,'b.')
xlabel('Frequency (rad/s)')
ylabel('Phase Lag (radians)')
title('Response Phase Lag as a Function of Frequency')
_make_figures("/tmp/tmpf7en5wy1", "png", "Figure", -1, -1, 0, 0)
s = tf('s');
P1 = 1/(s+1);
minimum_freq = 0.1;
maximum_freq = 500;
w = logspace(log10(minimum_freq),log10(maximum_freq),100);
magRatio1 = abs(1./(w+1));
phaseLag1 = atan2(0,1) - atan2(w,1);
figure()
loglog(w,magRatio1,'r.')
xlabel('Frequency (rad/s)')
ylabel('Magnitude Ratio')
title('Response Magnitude Ratio as a Function of Frequency')
figure()
loglog(w,phaseLag1,'b.')
xlabel('Frequency (rad/s)')
ylabel('Phase Lag (radians)')
title('Response Phase Lag as a Function of Frequency')
_make_figures("/tmp/tmp3osni2z1", "png", "Figure", -1, -1, 0, 0)
s = tf('s');
P1 = 1/(s+1);
minimum_freq = 0.1;
maximum_freq = 500;
w = logspace(log10(minimum_freq),log10(maximum_freq),100);
magRatio1 = abs(1./(w*1j+1));
phaseLag1 = atan2(0,1) - atan2(w,1);
figure()
loglog(w,magRatio1,'r.')
xlabel('Frequency (rad/s)')
ylabel('Magnitude Ratio')
title('Response Magnitude Ratio as a Function of Frequency')
figure()
loglog(w,phaseLag1,'b.')
xlabel('Frequency (rad/s)')
ylabel('Phase Lag (radians)')
title('Response Phase Lag as a Function of Frequency')
_make_figures("/tmp/tmpsbmzhhyo", "png", "Figure", -1, -1, 0, 0)
s = tf('s');
P1 = 1/(s+1);
minimum_freq = 0.1;
maximum_freq = 500;
w = logspace(log10(minimum_freq),log10(maximum_freq),100);
num1 = 1;
den1 = w.*1j + 1;
magRatio1 = abs(num1./den1);
phaseLag1 = ang(num1) - ang(den1);
%magRatio1 = abs(1./(w*1j + 1));
%phaseLag1 = atan2(0,1) - atan2(w,1);
figure()
loglog(w,magRatio1,'r.')
xlabel('Frequency (rad/s)')
ylabel('Magnitude Ratio')
title('Response Magnitude Ratio as a Function of Frequency')
figure()
loglog(w,phaseLag1,'b.')
xlabel('Frequency (rad/s)')
ylabel('Phase Lag (radians)')
title('Response Phase Lag as a Function of Frequency')
_make_figures("/tmp/tmpjd19zedu", "png", "Figure", -1, -1, 0, 0)
magRatio2 = sqrt(10^2 + 0^2)./sqrt(w.^2 + 1^2);
phaseLag2 = atan2(0,10) - atan2(w,1);
figure()
loglog(w,magRatio2,'r.')
xlabel('Frequency (rad/s)')
ylabel('Magnitude Ratio')
title('Response Magnitude Ratio as a Function of Frequency')
figure()
loglog(w,phaseLag2,'b.')
xlabel('Frequency (rad/s)')
ylabel('Phase Lag (radians)')
title('Response Phase Lag as a Function of Frequency')
_make_figures("/tmp/tmpidz9hjqb", "png", "Figure", -1, -1, 0, 0)
num2 = 10;
den2 = w.*1j + 1;
magRatio2 = abs(num2./den2);
phaseLag2 = ang(num2) - ang(den2);
figure()
loglog(w,magRatio2,'r.')
xlabel('Frequency (rad/s)')
ylabel('Magnitude Ratio')
title('Response Magnitude Ratio as a Function of Frequency')
figure()
loglog(w,phaseLag2,'b.')
xlabel('Frequency (rad/s)')
ylabel('Phase Lag (radians)')
title('Response Phase Lag as a Function of Frequency')
_make_figures("/tmp/tmpqp5s83um", "png", "Figure", -1, -1, 0, 0)
s = tf('s');
P1 = 1/(s+1);
minimum_freq = 0.1;
maximum_freq = 500;
w = logspace(log10(minimum_freq),log10(maximum_freq),100);
num1 = 1;
den1 = w.*1j + 1;
magRatio1 = abs(num1./den1);
phaseLag1 = ang(num1) - ang(den1);
figure()
loglog(w,magRatio1,'r.')
xlabel('Frequency (rad/s)')
ylabel('Magnitude Ratio')
title('Response Magnitude Ratio as a Function of Frequency')
figure()
loglog(w,phaseLag1,'b.')
xlabel('Frequency (rad/s)')
ylabel('Phase Lag (radians)')
title('Response Phase Lag as a Function of Frequency')
_make_figures("/tmp/tmpq0bzrgsl", "png", "Figure", -1, -1, 0, 0)
s = tf('s');
P1 = 1/(s+1);
minimum_freq = 0.1;
maximum_freq = 500;
w = logspace(log10(minimum_freq),log10(maximum_freq),100);
num1 = 1;
den1 = w.*1j + 1;
magRatio1 = abs(num1./den1);
phaseLag1 = angle(num1) - angle(den1);
figure()
loglog(w,magRatio1,'r.')
xlabel('Frequency (rad/s)')
ylabel('Magnitude Ratio')
title('Response Magnitude Ratio as a Function of Frequency')
figure()
loglog(w,phaseLag1,'b.')
xlabel('Frequency (rad/s)')
ylabel('Phase Lag (radians)')
title('Response Phase Lag as a Function of Frequency')
_make_figures("/tmp/tmp7sjhy9fu", "png", "Figure", -1, -1, 0, 0)
num2 = 10;
den2 = w.*1j + 1;
magRatio2 = abs(num2./den2);
phaseLag2 = angle(num2) - angle(den2);
figure()
loglog(w,magRatio2,'r.')
xlabel('Frequency (rad/s)')
ylabel('Magnitude Ratio')
title('Response Magnitude Ratio as a Function of Frequency')
figure()
loglog(w,phaseLag2,'b.')
xlabel('Frequency (rad/s)')
ylabel('Phase Lag (radians)')
title('Response Phase Lag as a Function of Frequency')
_make_figures("/tmp/tmpx1c_8f6c", "png", "Figure", -1, -1, 0, 0)
num3 = 1;
den3 = w.*1j + 100;
magRatio3 = abs(num3./den3);
phaseLag3 = angle(num3) - angle(den3);
figure()
loglog(w,magRatio3,'r.')
xlabel('Frequency (rad/s)')
ylabel('Magnitude Ratio')
title('Response Magnitude Ratio as a Function of Frequency')
figure()
loglog(w,phaseLag3,'b.')
xlabel('Frequency (rad/s)')
ylabel('Phase Lag (radians)')
title('Response Phase Lag as a Function of Frequency')
_make_figures("/tmp/tmprfd623qf", "png", "Figure", -1, -1, 0, 0)
num4 = w.*1j + 1;
den4 = (w.*1j).^2 + 5.*w.*1j + 50;
magRatio4 = abs(num4./den4);
phaseLag4 = angle(num4) - angle(den4);
figure()
loglog(w,magRatio4,'r.')
xlabel('Frequency (rad/s)')
ylabel('Magnitude Ratio')
title('Response Magnitude Ratio as a Function of Frequency')
figure()
loglog(w,phaseLag4,'b.')
xlabel('Frequency (rad/s)')
ylabel('Phase Lag (radians)')
title('Response Phase Lag as a Function of Frequency')
_make_figures("/tmp/tmpcflhifpq", "png", "Figure", -1, -1, 0, 0)
# Octave 4.2.2, Mon Nov 09 13:28:47 2020 UTC <herzs@ip-10-1-3-136>
PS1('PEXPECT_PROMPT>'); PS2('PEXPECT_PROMPT_')
graphics_toolkit
more off; source ~/.octaverc; cd("/home/herzs/Week12_Friday");PS1('PEXPECT_PROMPT>'); PS2('PEXPECT_PROMPT_')
addpath("/usr/local/lib/python3.6/dist-packages/octave_kernel")
graphics_toolkit('gnuplot')
set(0, 'defaultfigurevisible', 'off');
version
num4 = abs(w.*1j + 1);
den4 = abs((w.*1j).^2 + 5.*w.*1j + 50);
magRatio4 = abs(num4./den4);
phaseLag4 = angle(num4) - angle(den4);
figure()
loglog(w,magRatio4,'r.')
xlabel('Frequency (rad/s)')
ylabel('Magnitude Ratio')
title('Response Magnitude Ratio as a Function of Frequency')
figure()
loglog(w,phaseLag4,'b.')
xlabel('Frequency (rad/s)')
ylabel('Phase Lag (radians)')
title('Response Phase Lag as a Function of Frequency')
_make_figures("/tmp/tmpf5r83jwi", "png", "Figure", -1, -1, 0, 0)
s = tf('s');
%set up the system we wish to simulate
P = 1/(s+1);
%set up the input signal we will give to the system
w = .5*pi;
t = linspace(0,10,1000);
U = 1;%unity sinusoidal input
u = U*sin(w*t);%sinusoidal input
%now simulate the system response to this input
[y,t] = lsim(P,u,t);
%now plot the input and output together to compare
plot(t,u,t,y)
legend('input','output')
xlabel('Time (s)')
ylabel('input and response')
_make_figures("/tmp/tmpn782n0o7", "png", "Figure", -1, -1, 0, 0)
s = tf('s');
P1 = 1/(s+1);
minimum_freq = 0.1;
maximum_freq = 500;
w = logspace(log10(minimum_freq),log10(maximum_freq),100);
num1 = 1;
den1 = w.*1j + 1;
magRatio1 = abs(num1./den1);
phaseLag1 = angle(num1) - angle(den1);
figure()
loglog(w,magRatio1,'r.')
xlabel('Frequency (rad/s)')
ylabel('Magnitude Ratio')
title('Response Magnitude Ratio as a Function of Frequency')
figure()
loglog(w,phaseLag1,'b.')
xlabel('Frequency (rad/s)')
ylabel('Phase Lag (radians)')
title('Response Phase Lag as a Function of Frequency')
_make_figures("/tmp/tmp_uuug2_8", "png", "Figure", -1, -1, 0, 0)
num2 = 10;
den2 = w.*1j + 1;
magRatio2 = abs(num2./den2);
phaseLag2 = angle(num2) - angle(den2);
figure()
loglog(w,magRatio2,'r.')
xlabel('Frequency (rad/s)')
ylabel('Magnitude Ratio')
title('Response Magnitude Ratio as a Function of Frequency')
figure()
loglog(w,phaseLag2,'b.')
xlabel('Frequency (rad/s)')
ylabel('Phase Lag (radians)')
title('Response Phase Lag as a Function of Frequency')
_make_figures("/tmp/tmp_56pmv0j", "png", "Figure", -1, -1, 0, 0)
num3 = 1;
den3 = w.*1j + 100;
magRatio3 = abs(num3./den3);
phaseLag3 = angle(num3) - angle(den3);
figure()
loglog(w,magRatio3,'r.')
xlabel('Frequency (rad/s)')
ylabel('Magnitude Ratio')
title('Response Magnitude Ratio as a Function of Frequency')
figure()
loglog(w,phaseLag3,'b.')
xlabel('Frequency (rad/s)')
ylabel('Phase Lag (radians)')
title('Response Phase Lag as a Function of Frequency')
_make_figures("/tmp/tmptonosfts", "png", "Figure", -1, -1, 0, 0)
num4 = abs(w.*1j + 1);
den4 = abs((w.*1j).^2 + 5.*w.*1j + 50);
magRatio4 = abs(num4./den4);
phaseLag4 = angle(num4) - angle(den4);
figure()
loglog(w,magRatio4,'r.')
xlabel('Frequency (rad/s)')
ylabel('Magnitude Ratio')
title('Response Magnitude Ratio as a Function of Frequency')
figure()
loglog(w,phaseLag4,'b.')
xlabel('Frequency (rad/s)')
ylabel('Phase Lag (radians)')
title('Response Phase Lag as a Function of Frequency')
_make_figures("/tmp/tmps3j2h2ya", "png", "Figure", -1, -1, 0, 0)
num4 = abs(w.*1j + 1);
den4 = abs((w.*1j).^2 + 5.*w.*1j + 50);
magRatio4 = num4./den4;
phaseLag4 = angle(num4) - angle(den4);
figure()
loglog(w,magRatio4,'r.')
xlabel('Frequency (rad/s)')
ylabel('Magnitude Ratio')
title('Response Magnitude Ratio as a Function of Frequency')
figure()
loglog(w,phaseLag4,'b.')
xlabel('Frequency (rad/s)')
ylabel('Phase Lag (radians)')
title('Response Phase Lag as a Function of Frequency')
_make_figures("/tmp/tmp2i85ws36", "png", "Figure", -1, -1, 0, 0)
num4 = w.*1j + 1;
den4 = (w.*1j).^2 + 5.*w.*1j + 50;
magRatio4 = abs(num4./den4);
phaseLag4 = angle(num4) - angle(den4);
figure()
loglog(w,magRatio4,'r.')
xlabel('Frequency (rad/s)')
ylabel('Magnitude Ratio')
title('Response Magnitude Ratio as a Function of Frequency')
figure()
loglog(w,phaseLag4,'b.')
xlabel('Frequency (rad/s)')
ylabel('Phase Lag (radians)')
title('Response Phase Lag as a Function of Frequency')
_make_figures("/tmp/tmpy85321nd", "png", "Figure", -1, -1, 0, 0)
s = tf('s');
P1 = 1/(s+1);
minimum_freq = 0.1;
maximum_freq = 500;
w = logspace(log10(minimum_freq),log10(maximum_freq),100);
num1 = 1;
den1 = w.*1j + 1;
magRatio1 = abs(num1./den1);
phaseLag1 = angle(num1) - angle(den1);
figure()
semilogx(w,magRatio1,'r.')
xlabel('Frequency (rad/s)')
ylabel('Magnitude Ratio')
title('Response Magnitude Ratio as a Function of Frequency')
figure()
semilogx(w,phaseLag1,'b.')
xlabel('Frequency (rad/s)')
ylabel('Phase Lag (radians)')
title('Response Phase Lag as a Function of Frequency')
_make_figures("/tmp/tmpc639hdvw", "png", "Figure", -1, -1, 0, 0)
num2 = 10;
den2 = w.*1j + 1;
magRatio2 = abs(num2./den2);
phaseLag2 = angle(num2) - angle(den2);
figure()
semilogx(w,magRatio2,'r.')
xlabel('Frequency (rad/s)')
ylabel('Magnitude Ratio')
title('Response Magnitude Ratio as a Function of Frequency')
figure()
semilogx(w,phaseLag2,'b.')
xlabel('Frequency (rad/s)')
ylabel('Phase Lag (radians)')
title('Response Phase Lag as a Function of Frequency')
_make_figures("/tmp/tmpr26nhx8f", "png", "Figure", -1, -1, 0, 0)
num3 = 1;
den3 = w.*1j + 100;
magRatio3 = abs(num3./den3);
phaseLag3 = angle(num3) - angle(den3);
figure()
semilogx(w,magRatio3,'r.')
xlabel('Frequency (rad/s)')
ylabel('Magnitude Ratio')
title('Response Magnitude Ratio as a Function of Frequency')
figure()
semilogx(w,phaseLag3,'b.')
xlabel('Frequency (rad/s)')
ylabel('Phase Lag (radians)')
title('Response Phase Lag as a Function of Frequency')
_make_figures("/tmp/tmpam_ah6z1", "png", "Figure", -1, -1, 0, 0)
num4 = w.*1j + 1;
den4 = (w.*1j).^2 + 5.*w.*1j + 50;
magRatio4 = abs(num4./den4);
phaseLag4 = angle(num4) - angle(den4);
figure()
semilogx(w,magRatio4,'r.')
xlabel('Frequency (rad/s)')
ylabel('Magnitude Ratio')
title('Response Magnitude Ratio as a Function of Frequency')
figure()
semilogx(w,phaseLag4,'b.')
xlabel('Frequency (rad/s)')
ylabel('Phase Lag (radians)')
title('Response Phase Lag as a Function of Frequency')
_make_figures("/tmp/tmpcsr6_4lb", "png", "Figure", -1, -1, 0, 0)
# Octave 4.2.2, Tue Nov 10 13:14:33 2020 UTC <herzs@ip-10-1-3-119>
PS1('PEXPECT_PROMPT>'); PS2('PEXPECT_PROMPT_')
graphics_toolkit
more off; source ~/.octaverc; cd("/home/herzs/Lab_7");PS1('PEXPECT_PROMPT>'); PS2('PEXPECT_PROMPT_')
addpath("/usr/local/lib/python3.6/dist-packages/octave_kernel")
graphics_toolkit('gnuplot')
set(0, 'defaultfigurevisible', 'off');
version
% loading data...
data_load = load('StepResponse_Weighted8.txt');
time_load = data_load(:,1)*10^-6; % time (s)
Vs_load = data_load(:,3); % voltages (V)
V0_load = Vs_load(1); % initial voltage (V)
startIndex_load = find(Vs_load>V0_load,1,'first'); % finding index where votlage step occurs
tstart_load = time_load(startIndex_load); % time where voltage step occurs
Vin_load = Vs_load(startIndex_load); % magnitude of input voltage after step (V)
omega_load = data_load(:,4); % angular speed (rad/s)
omega0_load = mean(omega_load(1:20)) % initial angular speed (rad/s)
omegass_load = mean(omega_load(end-20:end)) % steady state angular speed after voltage step (rad/s)
omega_trimmed = omega_load(startIndex_load:end); % trimmed angular speeds to only include after the voltage step
time_trimmed = time_load(startIndex_load:end)-tstart_load; % trimmed time to only include after the voltage step
% finding time constant (tau)
omegatau_load = (0.632*(omegass_load - omega0_load))+omega0_load; 
tau_load = time_load(find(omega_load<omegatau_load,1,'last'))-tstart_load 
a = 1/tau_load
A = ((omegass_load-omega0_load)*a)/(Vin_load-V0_load)
% plotting model against experimental data...
s = tf('s');
GH_load1 = A/(s+a) % first order piece of third order system
[ysim_load1,tsim_load1]=step(GH_load1,time_trimmed);
ymodel_load1 = ((Vin_load-V0_load)*ysim_load1)+omega0_load;
figure
hold on;
plot(time_load(startIndex_load:end)-tstart_load,omega_load(startIndex_load:end))
plot(tsim_load1,ymodel_load1)
title('Comparison of Plant Model to Experimental Data for the Mass-Spring System')
xlabel('Time (s)')
ylabel('Angular Velocity (rad/s)')
legend('Experimental Data','First Order Plant','location','southeast')
hold off;
_make_figures("/tmp/tmp16lo938o", "png", "Figure", -1, -1, 0, 0)
# Octave 4.2.2, Fri Nov 13 12:01:38 2020 UTC <herzs@ip-10-1-3-119>
PS1('PEXPECT_PROMPT>'); PS2('PEXPECT_PROMPT_')
graphics_toolkit
more off; source ~/.octaverc; cd("/home/herzs/Project_2_Report");PS1('PEXPECT_PROMPT>'); PS2('PEXPECT_PROMPT_')
addpath("/usr/local/lib/python3.6/dist-packages/octave_kernel")
graphics_toolkit('gnuplot')
set(0, 'defaultfigurevisible', 'off');
addpath("/usr/local/lib/python3.6/dist-packages/oct2py");
exist("cd")
set(0, 'defaultfigurevisible', 'on');
graphics_toolkit('gnuplot');
_pyeval("/tmp/tmp5g9r__tk/writer.mat", "/tmp/tmp5g9r__tk/reader.mat");
graphics_toolkit('gnuplot')
set(0, 'defaultfigurevisible', 'off');
_pyeval("/tmp/tmp5g9r__tk/writer.mat", "/tmp/tmp5g9r__tk/reader.mat");
set(0, 'defaultfigurevisible', 'on');
graphics_toolkit('gnuplot');
_pyeval("/tmp/tmp5g9r__tk/writer.mat", "/tmp/tmp5g9r__tk/reader.mat");
graphics_toolkit('gnuplot')
set(0, 'defaultfigurevisible', 'off');
_pyeval("/tmp/tmp5g9r__tk/writer.mat", "/tmp/tmp5g9r__tk/reader.mat");
set(0, 'defaultfigurevisible', 'on');
graphics_toolkit('gnuplot');
_pyeval("/tmp/tmp5g9r__tk/writer.mat", "/tmp/tmp5g9r__tk/reader.mat");
graphics_toolkit('gnuplot')
set(0, 'defaultfigurevisible', 'off');
_pyeval("/tmp/tmp5g9r__tk/writer.mat", "/tmp/tmp5g9r__tk/reader.mat");
set(0, 'defaultfigurevisible', 'on');
graphics_toolkit('gnuplot');
_pyeval("/tmp/tmp5g9r__tk/writer.mat", "/tmp/tmp5g9r__tk/reader.mat");
graphics_toolkit('gnuplot')
set(0, 'defaultfigurevisible', 'off');
_pyeval("/tmp/tmp5g9r__tk/writer.mat", "/tmp/tmp5g9r__tk/reader.mat");
# Octave 4.2.2, Fri Nov 13 20:16:41 2020 UTC <herzs@ip-10-1-3-231>
PS1('PEXPECT_PROMPT>'); PS2('PEXPECT_PROMPT_')
graphics_toolkit
more off; source ~/.octaverc; cd("/home/herzs/Project_2_Report");PS1('PEXPECT_PROMPT>'); PS2('PEXPECT_PROMPT_')
addpath("/usr/local/lib/python3.6/dist-packages/octave_kernel")
graphics_toolkit('gnuplot')
set(0, 'defaultfigurevisible', 'off');
addpath("/usr/local/lib/python3.6/dist-packages/oct2py");
exist("cd")
set(0, 'defaultfigurevisible', 'on');
graphics_toolkit('gnuplot');
_pyeval("/tmp/tmp_grjso5w/writer.mat", "/tmp/tmp_grjso5w/reader.mat");
graphics_toolkit('gnuplot')
set(0, 'defaultfigurevisible', 'off');
_pyeval("/tmp/tmp_grjso5w/writer.mat", "/tmp/tmp_grjso5w/reader.mat");
# Octave 4.2.2, Fri Nov 13 20:17:23 2020 UTC <herzs@ip-10-1-3-231>
PS1('PEXPECT_PROMPT>'); PS2('PEXPECT_PROMPT_')
graphics_toolkit
more off; source ~/.octaverc; cd("/home/herzs/Project_2_Report");PS1('PEXPECT_PROMPT>'); PS2('PEXPECT_PROMPT_')
addpath("/usr/local/lib/python3.6/dist-packages/octave_kernel")
graphics_toolkit('gnuplot')
set(0, 'defaultfigurevisible', 'off');
addpath("/usr/local/lib/python3.6/dist-packages/oct2py");
exist("cd")
set(0, 'defaultfigurevisible', 'on');
graphics_toolkit('gnuplot');
_pyeval("/tmp/tmp3u8pn7bv/writer.mat", "/tmp/tmp3u8pn7bv/reader.mat");
graphics_toolkit('gnuplot')
set(0, 'defaultfigurevisible', 'off');
_pyeval("/tmp/tmp3u8pn7bv/writer.mat", "/tmp/tmp3u8pn7bv/reader.mat");
set(0, 'defaultfigurevisible', 'on');
graphics_toolkit('gnuplot');
_pyeval("/tmp/tmp3u8pn7bv/writer.mat", "/tmp/tmp3u8pn7bv/reader.mat");
graphics_toolkit('gnuplot')
set(0, 'defaultfigurevisible', 'off');
_pyeval("/tmp/tmp3u8pn7bv/writer.mat", "/tmp/tmp3u8pn7bv/reader.mat");
set(0, 'defaultfigurevisible', 'on');
graphics_toolkit('gnuplot');
_pyeval("/tmp/tmp3u8pn7bv/writer.mat", "/tmp/tmp3u8pn7bv/reader.mat");
graphics_toolkit('gnuplot')
set(0, 'defaultfigurevisible', 'off');
_pyeval("/tmp/tmp3u8pn7bv/writer.mat", "/tmp/tmp3u8pn7bv/reader.mat");
_make_figures("/tmp/tmp3nxjdy1r", "png", "__ipy_oct_fig_", -1, -1, 0, 0)
set(0, 'defaultfigurevisible', 'on');
graphics_toolkit('gnuplot');
_pyeval("/tmp/tmp3u8pn7bv/writer.mat", "/tmp/tmp3u8pn7bv/reader.mat");
graphics_toolkit('gnuplot')
set(0, 'defaultfigurevisible', 'off');
_pyeval("/tmp/tmp3u8pn7bv/writer.mat", "/tmp/tmp3u8pn7bv/reader.mat");
_make_figures("/tmp/tmp2ea1vbpn", "png", "__ipy_oct_fig_", -1, -1, 0, 0)
set(0, 'defaultfigurevisible', 'on');
graphics_toolkit('gnuplot');
_pyeval("/tmp/tmp3u8pn7bv/writer.mat", "/tmp/tmp3u8pn7bv/reader.mat");
graphics_toolkit('gnuplot')
set(0, 'defaultfigurevisible', 'off');
_pyeval("/tmp/tmp3u8pn7bv/writer.mat", "/tmp/tmp3u8pn7bv/reader.mat");
_make_figures("/tmp/tmpcrrfn9i0", "png", "__ipy_oct_fig_", -1, -1, 0, 0)
set(0, 'defaultfigurevisible', 'on');
graphics_toolkit('gnuplot');
_pyeval("/tmp/tmp3u8pn7bv/writer.mat", "/tmp/tmp3u8pn7bv/reader.mat");
graphics_toolkit('gnuplot')
set(0, 'defaultfigurevisible', 'off');
_pyeval("/tmp/tmp3u8pn7bv/writer.mat", "/tmp/tmp3u8pn7bv/reader.mat");
_make_figures("/tmp/tmp4xz3jv40", "png", "__ipy_oct_fig_", -1, -1, 0, 0)
set(0, 'defaultfigurevisible', 'on');
graphics_toolkit('gnuplot');
_pyeval("/tmp/tmp3u8pn7bv/writer.mat", "/tmp/tmp3u8pn7bv/reader.mat");
graphics_toolkit('gnuplot')
set(0, 'defaultfigurevisible', 'off');
_pyeval("/tmp/tmp3u8pn7bv/writer.mat", "/tmp/tmp3u8pn7bv/reader.mat");
set(0, 'defaultfigurevisible', 'on');
graphics_toolkit('gnuplot');
_pyeval("/tmp/tmp3u8pn7bv/writer.mat", "/tmp/tmp3u8pn7bv/reader.mat");
graphics_toolkit('gnuplot')
set(0, 'defaultfigurevisible', 'off');
_pyeval("/tmp/tmp3u8pn7bv/writer.mat", "/tmp/tmp3u8pn7bv/reader.mat");
_make_figures("/tmp/tmpomf3mj29", "png", "__ipy_oct_fig_", -1, -1, 0, 0)
set(0, 'defaultfigurevisible', 'on');
graphics_toolkit('gnuplot');
_pyeval("/tmp/tmp3u8pn7bv/writer.mat", "/tmp/tmp3u8pn7bv/reader.mat");
graphics_toolkit('gnuplot')
set(0, 'defaultfigurevisible', 'off');
_pyeval("/tmp/tmp3u8pn7bv/writer.mat", "/tmp/tmp3u8pn7bv/reader.mat");
_make_figures("/tmp/tmpdcehca5g", "png", "__ipy_oct_fig_", -1, -1, 0, 0)
set(0, 'defaultfigurevisible', 'on');
graphics_toolkit('gnuplot');
_pyeval("/tmp/tmp3u8pn7bv/writer.mat", "/tmp/tmp3u8pn7bv/reader.mat");
graphics_toolkit('gnuplot')
set(0, 'defaultfigurevisible', 'off');
_pyeval("/tmp/tmp3u8pn7bv/writer.mat", "/tmp/tmp3u8pn7bv/reader.mat");
_make_figures("/tmp/tmp09x0jind", "png", "__ipy_oct_fig_", -1, -1, 0, 0)
set(0, 'defaultfigurevisible', 'on');
graphics_toolkit('gnuplot');
_pyeval("/tmp/tmp3u8pn7bv/writer.mat", "/tmp/tmp3u8pn7bv/reader.mat");
graphics_toolkit('gnuplot')
set(0, 'defaultfigurevisible', 'off');
_pyeval("/tmp/tmp3u8pn7bv/writer.mat", "/tmp/tmp3u8pn7bv/reader.mat");
_make_figures("/tmp/tmp1w3j_wyp", "png", "__ipy_oct_fig_", -1, -1, 0, 0)
# Octave 4.2.2, Sat Nov 14 07:54:45 2020 UTC <herzs@ip-10-1-3-231>
